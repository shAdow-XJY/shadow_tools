import 'dart:io';

import 'package:shadow_tools/config/st_config.dart';

void main() {
  // 获取各个列表中的内容
  final fileComponents = _generateStaticFields(STConfig.fileList, 'file');
  final convertComponents = _generateStaticFields(STConfig.convertList, 'convert');
  final otherComponents = _generateStaticFields(STConfig.otherList, 'other');

  // 将生成的类内容写入文件
  final classContent = '''
/// Generated by st_config_check.dart according to st_config.dart
class STConfigGlobal {
  // File components
  ${fileComponents.join('\n  ')}

  // Convert components
  ${convertComponents.join('\n  ')}

  // Other components
  ${otherComponents.join('\n  ')}
}
''';

  // 写入文件
  File('lib/config/st_config_global.dart').writeAsStringSync(classContent);

  print('STConfigGlobal class has been generated and written to st_config_global.dart.');
}

List<String> _generateStaticFields(List<String> components, String category) {
  return components.map((component) {
    // 处理特殊字符，比如 "/" 用 "" 替代并生成合适的变量名称
    String variableName = _toCamelCase(category + _sanitize(component));
    return 'static String $variableName = "$component";';
  }).toList();
}

// 将字符串转换为驼峰命名
String _toCamelCase(String input) {
  return input.split(' ').map((word) {
    return word[0].toLowerCase() + word.substring(1).replaceAll(RegExp(r'[^a-zA-Z0-9]'), '');
  }).join('');
}

// 处理特殊字符
String _sanitize(String input) {
  return input.replaceAll(RegExp(r'[^a-zA-Z0-9]'), '');
}